version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 16
    commands:
      - echo "Install Terraform"
      - curl -o /tmp/terraform.zip https://releases.hashicorp.com/terraform/1.2.7/terraform_1.2.7_linux_amd64.zip
      - unzip /tmp/terraform.zip -d /usr/local/bin/
      - chmod +x /usr/local/bin/terraform
      - echo "Done Installing Terraform"
    finally:
      - terraform --version
      - echo "End of install phase"
  pre_build:
    commands:
      - export TF_VAR_stage=$STAGE
      - export TF_VAR_region=$REGION
      - export TF_VAR_created_by=pipeline
      - export TF_VAR_service="walkthrough-cameron"
      - export NODE_ENV=STAGE
      - echo "Validating Terraform project"
      - cd $CODEBUILD_SRC_DIR
      - cd packages/resources/terraform
      - |
        terraform init -input=false \
          -backend-config="bucket=terraform-state-${TARGET_ACCOUNT_ID}-${REGION}" \
          -backend-config="region=${REGION}" \
          -backend-config="dynamodb_table=terraform-state-lock-${TARGET_ACCOUNT_ID}-${REGION}"
      - terraform validate
      - terraform fmt -recursive -check
      - echo "Done with Terraform project"
      - echo "Validating node project"
      - cd $CODEBUILD_SRC_DIR
      - cd packages/service
      - echo "Installing node_modules"
      - npm install
      - npm run lint
      - echo "Done with node project"
    finally:
      - echo "End of pre-build phase"
  build:
    commands:
      - echo "Deploying Terraform"
      - cd $CODEBUILD_SRC_DIR
      - cd packages/resources/terraform
      - terraform apply -input=false -auto-approve
      - terraform output -json > ../../service/resources/terraform.json
      - echo "Terraform deployed"
      - echo "========================"
      - echo "Deploying Serverless"
      - cd $CODEBUILD_SRC_DIR
      - cd packages/service
      - npx sls deploy
      - echo "Serverless deployed"
      - echo "========================"
    finally:
      - echo "End of build phase"
  # post_build:
  #   commands:
  #     - command
# artifacts:
#   files:
#     - file_path
# # Caches are shared amongst projects (single CodeBuild), so cache doesn't make sense
# # This can be enable if each project has it's own CodeBuild
# cache:
#   paths:
#     - "packages/service/node_modules/**/*"
#     - "packages/resources/terraform/.terraform/**/*"
